{"total":8,"pageSize":12,"pageCount":1,"data":[{"title":"遗传算法","uid":"5e05676005a67b187c728a6e49c065fb","slug":"遗传算法","date":"2022-04-03T07:17:11.000Z","updated":"2022-05-17T07:13:33.907Z","comments":true,"path":"api/articles/遗传算法.json","cover":[],"text":" 前言：Genetic Algorithm（简称GA），人工智能的重要分支，用计算机模拟生命进化机制而发展起来的学科，通过适者生存机制来搜索计算和问题求解。遗传算法具有普适性，不依赖优化对象的模型，也就是说无需知道优化目标函数长啥样的，完全就靠采样就可以了。但普适性强就势必意味着...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"遗传算法","slug":"遗传算法","count":1,"path":"api/tags/遗传算法.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"中国剩余定理","uid":"b6cf2bc1f982cde92ae567cafd18a8a1","slug":"中国剩余定理","date":"2022-03-14T12:43:51.000Z","updated":"2022-03-14T13:12:15.134Z","comments":true,"path":"api/articles/中国剩余定理.json","cover":null,"text":" 又名“孙子定理”， 《孙子算经》中第二十六题【原文】：：今有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二，问物几何？答曰：‘二十三’。术曰：三三数之剩二，置一百四十；五五数之剩三，置六十三，七七数之剩二，置三十，并之。得二百三十三，以二百一十减之，即得。凡三三数之剩一，...","link":"","photos":[],"count_time":{"symbolsCount":928,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"数论","slug":"数论","count":1,"path":"api/tags/数论.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Dijkstra","uid":"7ff27b21dc778d80ff5e8e51d9209bee","slug":"Dijkstra","date":"2022-03-08T15:28:56.000Z","updated":"2022-03-12T12:27:35.039Z","comments":true,"path":"api/articles/Dijkstra.json","cover":null,"text":"单源最短路径 &#x2F;* ·给定邻接矩阵G[][] ·定义：1、int数组dis[]记录源点到各个节点最短距离。 2、bool数组fin[]记录各节点是否已经找到最小距离 ·初始化：dis[源点]&#x3D;0、dis[其余]&#x3D;Inf ;fin[源点]&#x3D;t...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"algorithm","slug":"algorithm","count":4,"path":"api/tags/algorithm.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"摘录与感悟","uid":"068ecfc1151b185a3dd09eb4e4fa4457","slug":"摘录与感悟","date":"2022-03-07T15:00:54.000Z","updated":"2022-03-15T11:17:40.578Z","comments":true,"path":"api/articles/摘录与感悟.json","cover":null,"text":"一些句子 忠厚老实人的恶毒，像饭里的砂砾，或者出骨鱼片里未净的刺，会给人一种不期待的伤痛。​ —-《围城》 你若问人问题，他答非所问，便已是答了，毋需再问。 —《素履之往》​ 世上的事，说足了这头，便开始说那头 —-《俗世奇人》​ 如果失望了肯定是附加了一些不切实际的期望在她身上...","link":"","photos":[],"count_time":{"symbolsCount":996,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"随笔","slug":"随笔","count":1,"path":"api/tags/随笔.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"二分查找","date":"2022-03-07T14:29:22.000Z","updated":"2022-03-07T15:46:12.925Z","comments":true,"path":"api/articles/二分查找.json","cover":null,"text":"·二分查找 浅查一下吧&#x2F;&#x2F;查找有序表中第一个出现的元素K（lower&#x3D;1）,最后一个出现的元素K(lower&#x3D;1) int BiSearch(int A[],int K,int lower) &#123; int left&#x3D;0 ,...","link":"","photos":[],"count_time":{"symbolsCount":727,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"algorithm","slug":"algorithm","count":4,"path":"api/tags/algorithm.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"并查集","date":"2022-03-07T04:28:31.000Z","updated":"2022-03-07T14:55:02.444Z","comments":true,"path":"api/articles/并查集.json","cover":null,"text":" 树与图 并 Union 查 Find 集 Set 利用数组 int father[N] 来实现并查集产生的每一个集合都是一棵树，即不会产生环。 操作1、 初始化 初始化 father[]数组，一开始每一个元素都是一个集合（自成孤岛），令father[i] &#x3D; i; f...","link":"","photos":[],"count_time":{"symbolsCount":662,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"algorithm","slug":"algorithm","count":4,"path":"api/tags/algorithm.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"动态规划","uid":"f6af5bf3fb5f66f52237908153c03aea","slug":"动态规划","date":"2022-03-02T10:48:14.000Z","updated":"2022-08-01T07:07:05.152Z","comments":true,"path":"api/articles/动态规划.json","cover":null,"text":" 例：用2、5、7元硬币凑出正好27元，且要求硬币数量最少。##1、类型 计数型 最值型 存在型 2、思路与步骤①确定状态1、f(x)或者f(x)(y)代表什么：凑出x元所需最少硬币数量2、最后一步代表什么； $a_1 + a_2 + a_3\\cdots+a_k$ ,最后一枚硬币...","link":"","photos":[],"count_time":{"symbolsCount":534,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"动态规划","slug":"动态规划","count":1,"path":"api/tags/动态规划.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"简单算法模板","uid":"dca193cd3708bfa4a4816acdfe93287d","slug":"简单算法模板","date":"2022-03-02T04:48:03.000Z","updated":"2022-03-13T14:30:40.734Z","comments":true,"path":"api/articles/简单算法模板.json","cover":null,"text":" This is a template of sample algorithm that records my pushing process ·树定义与构造函数struct BiTree&#123; char data; struct BiTree *lchild; struc...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"algorithm","slug":"algorithm","count":4,"path":"api/tags/algorithm.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}