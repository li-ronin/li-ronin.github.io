{"title":"遗传算法","uid":"5e05676005a67b187c728a6e49c065fb","slug":"遗传算法","date":"2022-04-03T07:17:11.000Z","updated":"2022-05-17T07:13:33.907Z","comments":true,"path":"api/articles/遗传算法.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>前言：Genetic Algorithm（简称GA），人工智能的重要分支，用计算机模拟生命进化机制而发展起来的学科，通过适者生存机制来搜索计算和问题求解。遗传算法具有普适性，不依赖优化对象的模型，也就是说无需知道优化目标函数长啥样的，完全就靠采样就可以了。但普适性强就势必意味着针对性弱，简单来说就是 对什么问题都能用的算法，那一定对特定某一类问题效果不好。 No Free Lunch .</p></blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"关于遗传算法\"><a href=\"#关于遗传算法\" class=\"headerlink\" title=\"关于遗传算法\"></a>关于遗传算法</h2><p><strong>先进行定向选择，再进行不定项的变异</strong><br>step1：随机生成一个群体。随机选第一批种子选手作为父本<br>step2：设定适应度函数。快者生存，跑得快的更容易活下去，跑得慢的更容易死<br>step3：产生后代。第一批父本幸存者产后代（产生均匀&#x2F;非均匀变异<br>step4：迭代</p>\n<p><strong>遗传算法的基本要素包括染色体编码方法、适应度函数、遗传操作和运行参数。</strong><br><strong>其中：1、染色体编码方法是指个体的编码方法,目前包括二进制法、实数法等。二进制法是指把个体编码成为一个二进制串,实数法是指把个体编码成为一个实数串。</strong><br><strong>2、适应度函数是指根据进化目标编写的计算个体适应度值的函数,通过适应度函数计算每个个体的适应度值,提供给选择算子进行选择。</strong><br><strong>3、遗传操作是指选择操作、交叉操作和变异操作。</strong><br><strong>4、运行参数是遗传算法在初始化时确定的参数,主要包括：群体大小 M,遗传代数G,交叉概率Pc和变异概率Pm。</strong></p>\n<p><img src=\"C:\\Users\\bkszd\\Desktop\\Typora的图片\\遗传算法流程.png\"></p>\n<p><img src=\"C:\\Users\\bkszd\\Desktop\\Typora的图片\\遗传算法全程.png\"></p>\n<h2 id=\"标准遗传算法\"><a href=\"#标准遗传算法\" class=\"headerlink\" title=\"标准遗传算法\"></a>标准遗传算法</h2><ul>\n<li>选择算法</li>\n<li>交叉算法</li>\n<li>变异算法</li>\n</ul>\n<p><img src=\"C:\\Users\\bkszd\\Desktop\\Typora的图片\\遗传算法交叉.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>数学模型可表示为：SAG&#x3D;（C，E,  P0,  N,  Φ， Γ， ψ， Τ）<br>C：个体编码方式<br>E：个体的适应度评价函数（又称目标函数，用来随机淘汰样本）<br>P0：初始种群（父本）<br>N： 种群大小<br>Φ：选择算子<br>Γ： 交叉算子<br>ψ：变异算子<br>Τ：遗传运算的终止条件</p></blockquote>\n<h2 id=\"适用场景\"><a href=\"#适用场景\" class=\"headerlink\" title=\"适用场景\"></a>适用场景</h2><ul>\n<li>场景1: 神经网络超参数优化</li>\n<li>场景2: 一部分结构和特性固定的组合优化问题</li>\n<li>场景3: 一部分机理模型难以建立的黑箱优化问题</li>\n<li>场景4: 多目标优化问题</li>\n</ul>\n<p><strong>遗传算法为代表的进化计算方法主要还是捡数学优化的漏，优先考虑数学优化方法，当数学优化解决不了的时候再考虑遗传算法。当一类问题采用遗传算法时基本上代表这是没有办法的办法了。</strong></p>\n<h2 id=\"编码方式\"><a href=\"#编码方式\" class=\"headerlink\" title=\"编码方式\"></a>编码方式</h2><ul>\n<li>二进制编码<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>优点： 1. 编码、解码操作简单易行 2. 交叉、变异等遗传操作便于实现 3. 合最小字符集编码原则 4. 利用模式定理对算法进行理论分析。</p></blockquote>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>缺点：对于一些连续函数的优化问题，由于其随机性使得其局部搜索能力较差，如对于一些高精度的问题，当解迫近于最优解后，由于其变异后表现型变化很大，不连续，所以会远离最优解，达不到稳定。</p></blockquote>\n<ul>\n<li><p>格雷码</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>优点：增强遗传算法的局部搜索能力，便于对连续函数进行局部空间搜索。使用非常广泛。</p></blockquote>\n</li>\n<li><p>浮点编码法</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>优点：<br>1、适用于在遗传算法中表示范围较大的数<br>2、适用于精度要求较高的遗传算法<br>3、便于较大空间的遗传搜索<br>4、改善了遗传算法的计算复杂性，提高了运算交率<br>5、便于遗传算法与经典优化方法的混合使用<br>6、便于设计针对问题的专门知识的知识型遗传算子<br>7、便于处理复杂的决策变量约束条件</p></blockquote>\n</li>\n<li><p>符号编码</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>优点：<br>1、符合有意义积术块编码原则<br>2、便于在遗传算法中利用所求解问题的专门知识<br>3、便于遗传算法与相关近似算法之间的混合使用。</p></blockquote>\n</li>\n</ul>\n<h2 id=\"选择算子\"><a href=\"#选择算子\" class=\"headerlink\" title=\"选择算子\"></a>选择算子</h2><ul>\n<li><p>二元锦标赛选择<br><strong>从父代种群中随机选择2个个体，比较2个个体的适应度值，选择适应度更佳的个体参与下一环节的“交叉”和“变异”。</strong></p>\n<pre class=\"line-numbers language-matlab\" data-language=\"matlab\"><code class=\"language-matlab\">functiom p &#x3D; BTS(Parent)\nnum &#x3D; numel(Parent);\nindex &#x3D; randperm(num); % 1~num的乱序数组\nplayers &#x3D; Parent(index（1:2）);%把随机Parent的下标index[1]和index[2]给players\n%写法一：\n[~,pos] &#x3D; sort([players.fitness],&#39;descend&#39;);%pos是sort排序返回的下标，~不接收\np &#x3D; players(pos(1));\n%写法二：\nif palyers(1).fitness &gt; palyers(2).fitness\t%选适应度大的个体\n\tp &#x3D; palyers(1);\nelse\n\tp &#x3D; palyers(2);\nend\nend\t</code></pre>\n<p>【注】</p>\n<pre class=\"line-numbers language-matlab\" data-language=\"matlab\"><code class=\"language-matlab\">%********结构体排序****************\n t.x&#x3D;[];   t.y&#x3D;[];\n P &#x3D; repmat(t,10,1)\n      for i&#x3D;1:10\nP(i).x &#x3D; randi([1,10],1,5);\nP(i).y &#x3D;sum(P(i).x);\n      end\n [A,pos] &#x3D; sort([P.y],&#39;ascend&#39;)\n %A是排好序的P.y\n A &#x3D;  13    16    22    29    29    30    31    32    32    44\n %pos是P.y的下标\n pos &#x3D;3     8      9      5      6      2      7     1     10     4</code></pre>\n</li>\n<li><p>多元锦标赛选择<br><strong>从父代种群中随机选择N个个体，比较N个个体的适应度值，选择适应度更佳的个体参与下一环节的“交叉”和“变异”。</strong></p>\n <pre class=\"line-numbers language-matlab\" data-language=\"matlab\"><code class=\"language-matlab\">function p &#x3D; MTS(Parent,count)\n  n &#x3D; numel(Parent);\n  if count&gt;&#x3D;n\n      error(&#39;设置的选择个数必须小于父代种群规模&#39;);\n  else\n       index &#x3D; randperm(n);\n       players &#x3D; Parent(index(1:count));\n       [~,pos] &#x3D; sort([players.fitness],&#39;descend&#39;);\n       p &#x3D; players(pos(1));\n  end\nend</code></pre>\n</li>\n<li><p>轮盘赌选择<br><strong>1、计算每个个体的相对适应度值；</strong><br><strong>2、计算每个个体的累计概率；</strong><br><strong>2、转动轮盘选择个体，被选中的概率与个体适应度值成正比</strong></p>\n <pre class=\"line-numbers language-matlab\" data-language=\"matlab\"><code class=\"language-matlab\">%轮盘赌选择法\nfunction p &#x3D; RWS(Parent)\n    Px &#x3D; [Parent.fitness] .&#x2F; sum([Parent.fitness]); %计算相对适应度\n    Cx &#x3D; cumsum(Px);                                %累计概率\n    r &#x3D; rand;                                       %产生随机数r\n    i &#x3D; find(r&lt;&#x3D; Cx,1,&#39;first&#39;);                     %找到随机点落的区间\n    p &#x3D; Parent(i);\nend</code></pre></li>\n</ul>\n<h2 id=\"交叉算子\"><a href=\"#交叉算子\" class=\"headerlink\" title=\"交叉算子\"></a>交叉算子</h2><ul>\n<li><p>单点交叉</p>\n</li>\n<li><p>多点交叉</p>\n</li>\n<li><p>均匀交叉</p>\n</li>\n</ul>\n<h2 id=\"变异算子\"><a href=\"#变异算子\" class=\"headerlink\" title=\"变异算子\"></a>变异算子</h2><h2 id=\"遗传算法的有效性\"><a href=\"#遗传算法的有效性\" class=\"headerlink\" title=\"遗传算法的有效性\"></a>遗传算法的有效性</h2><ul>\n<li>模式定理</li>\n<li>积木块假设</li>\n</ul>\n","feature":true,"text":" 前言：Genetic Algorithm（简称GA），人工智能的重要分支，用计算机模拟生命进化机制而发展起来的学科，通过适者生存机制来搜索计算和问题求解。遗传算法具有普适性，不依赖优化对象的模型，也就是说无需知道优化目标函数长啥样的，完全就靠采样就可以了。但普适性强就势必意味着...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"遗传算法","slug":"遗传算法","count":1,"path":"api/tags/遗传算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">关于遗传算法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%87%E5%87%86%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">标准遗传算法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">适用场景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">编码方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">选择算子</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%A4%E5%8F%89%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">交叉算子</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E5%BC%82%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">变异算子</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E7%9A%84%E6%9C%89%E6%95%88%E6%80%A7\"><span class=\"toc-text\">遗传算法的有效性</span></a></li></ol>","author":{"name":"Lkh","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"tite","uid":"858dfc91504ed7fb108cacb904a43d3a","slug":"tite","date":"2023-04-11T08:33:54.000Z","updated":"2023-04-11T08:33:54.768Z","comments":true,"path":"api/articles/tite.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Lkh","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"中国剩余定理","uid":"b6cf2bc1f982cde92ae567cafd18a8a1","slug":"中国剩余定理","date":"2022-03-14T12:43:51.000Z","updated":"2022-03-14T13:12:15.134Z","comments":true,"path":"api/articles/中国剩余定理.json","keywords":null,"cover":null,"text":" 又名“孙子定理”， 《孙子算经》中第二十六题【原文】：：今有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二，问物几何？答曰：‘二十三’。术曰：三三数之剩二，置一百四十；五五数之剩三，置六十三，七七数之剩二，置三十，并之。得二百三十三，以二百一十减之，即得。凡三三数之剩一，...","link":"","photos":[],"count_time":{"symbolsCount":928,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"数论","slug":"数论","count":1,"path":"api/tags/数论.json"}],"author":{"name":"Lkh","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}